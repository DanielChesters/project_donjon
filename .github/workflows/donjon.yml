# This is a basic workflow to help you get started with Actions

name: Donjon CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
            # Shallow clones should be disabled for a better relevancy of analysis
            fetch-depth: 0
      - name : Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11' # The JDK version to make available on the path.
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
            path: ~/.gradle/caches
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
            restore-keys: ${{ runner.os }}-gradle
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
            path: ~/.sonar/cache
            key: ${{ runner.os }}-sonar
            restore-keys: ${{ runner.os }}-sonar
      - name: Build and analyze
        run: ./gradlew build jacocoTestReport sonarqube --info
        env:
            # Needed to get some information about the pull request, if any
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            # SonarCloud access token should be generated from https://sonarcloud.io/account/security/
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}